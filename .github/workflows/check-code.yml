name: Build and test
on: [pull_request]

jobs:
  cancel-previous:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
  install:
    name: Install dependencies and build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.13.0]
    steps:
      - uses: actions/checkout@v2
      - name: Setup app dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ needs.install.outputs.matrix.node-version }}
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run unit tests
        run: npm run test:headless
  build:
    name: Build app
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ needs.install.outputs.matrix.node-version }}
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Build project
        run: npm run build
  lint:
    name: Run eslint and prettier
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2
      - name: Setup app dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ needs.install.outputs.matrix.node-version }}
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run ESLint
        run: npm run lint
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        if: always()
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint_report.json'
      - name: Run Prettier
        run: npx prettier --check .
